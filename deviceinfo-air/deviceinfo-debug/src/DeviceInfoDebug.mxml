<?xml version="1.0"?>
<!--
  Created by max on 10/23/14.
-->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark" backgroundColor="#00AAAA">

    <fx:Script>
        <![CDATA[
        import com.github.airext.DeviceInfo;
        import com.github.airext.data.DeviceInfoGeneral;

        import spark.components.Alert;

        private function imei_clickHandler(event:MouseEvent):void
        {
            Alert.show(String(DeviceInfo.sharedInstance().getIMEI()));
        }

        private function general_clickHandler(event:MouseEvent):void
        {
            var general:DeviceInfoGeneral = DeviceInfo.sharedInstance().general;

            Alert.show(String(general));
        }

        private function iosVendorIdentifier_clickHandler(event:MouseEvent):void
        {
            var general:DeviceInfoGeneral = DeviceInfo.sharedInstance().general;

            Alert.show(String(general.ios.getVendorIdentifier()));
        }

        private function androidIdentifier_clickHandler(event:MouseEvent):void
        {
            var general:DeviceInfoGeneral = DeviceInfo.sharedInstance().general;

            Alert.show(String(general.android.getAndroidIdentifier()));
        }

        private function batteryMonitor_clickHandler(event:MouseEvent):void
        {
            if (DeviceInfo.sharedInstance().battery.isMonitoring)
            {
                DeviceInfo.sharedInstance().battery.stopMonitoring();
            }
            else
            {
                DeviceInfo.sharedInstance().battery.startMonitoring();
            }
        }

        private function log_clickHandler(event:MouseEvent):void
        {
            DeviceInfo.sharedInstance().log(logInput.text);
        }

        private function crash_clickHandler(event:MouseEvent):void
        {
            DeviceInfo.sharedInstance().crash();
        }
        ]]>
    </fx:Script>

    <s:layout>
        <s:VerticalLayout horizontalAlign="justify" gap="30" paddingTop="30" />
    </s:layout>

    <s:Button label="isSupported" click="Alert.show(String(DeviceInfo.isSupported()));" />

    <s:Button label="IMEI" click="imei_clickHandler(event)" />

    <s:Button label="General" click="general_clickHandler(event)" />

    <s:VGroup contentBackgroundColor="#FFFFFF">
        <s:HGroup width="100%">
            <s:Label text="Battery State:{DeviceInfo.sharedInstance().battery.state}" />
            <s:Label text="Battery Level:{DeviceInfo.sharedInstance().battery.level}" />
        </s:HGroup>
        <s:HGroup>
            <s:Button label="{DeviceInfo.sharedInstance().battery.isMonitoring ? 'Stop Battery Monitoring' : 'Start Battery Monitoring'}" click="batteryMonitor_clickHandler(event)" />
        </s:HGroup>
    </s:VGroup>

    <s:HGroup contentBackgroundColor="#FFFFFF">
        <s:TextInput id="logInput" width="100%" />
        <s:Button label="Log" click="log_clickHandler(event)" />
    </s:HGroup>

    <s:Button label="Crash" click="crash_clickHandler(event)" />

    <s:Label text="IOS SPECIFIC" />

    <s:Button label="Vendor Identifier" click="iosVendorIdentifier_clickHandler(event)" />

    <s:Label text="ANDROID SPECIFIC" />

    <s:Button label="Android Identifier" click="androidIdentifier_clickHandler(event)" />

</s:Application>
